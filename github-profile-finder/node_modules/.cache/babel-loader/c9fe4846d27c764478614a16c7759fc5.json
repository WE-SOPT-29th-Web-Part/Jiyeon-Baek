{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\29SOPT\\\\Jiyeon-Baek\\\\github-profile-finder\\\\src\\\\components\\\\SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport History from './History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  setUserInfo\n}) => {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [userList, setUserList] = useState([]);\n  const maxHistory = 3;\n\n  const handleChange = e => {\n    setUser(e.target.value);\n  }; // 값을 submit 했을 때, 검색이 되도록.\n  // input 태그를 form 태그로 감싸고, onSubmit 이벤트를 사용\n\n\n  const handleSubmit = async e => {\n    // submit 하면 새로고침 되는 것을 방지\n    e.preventDefault();\n    setUserInfo(currentUserInfo => ({ ...currentUserInfo,\n      status: 'pending' // 로딩 중\n\n    })); // user 값을 이용하여 서버에 있는 데이터 받아오기\n    // 서버 통신에 시간 소요 -> 비동기 처리 (async, await)\n    // axios는 서버 통신을 돕는 툴\n\n    try {\n      const {\n        data\n      } = await axios.get(`https://api.github.com/users/${user}`);\n      setUserInfo(currentUserInfo => ({ ...currentUserInfo,\n        data,\n        status: 'resolved'\n      }));\n      setUserInfo(data);\n    } catch (error) {\n      setUserInfo(currentUserInfo => ({ ...currentUserInfo,\n        data: null,\n        status: 'rejected'\n      }));\n      console.log(error);\n    } // 배열 속에 user가 있는지 확인하고 없으면 추가\n\n\n    if (!userList.includes(user)) {\n      // history에 최대 3개까지만 저장\n      let tempList;\n      tempList = userList.length >= maxHistory ? [...userList, user].slice(1, 4) : [...userList, user];\n      setUserList(tempList);\n      localStorage.setItem('userList', JSON.stringify(tempList));\n    }\n\n    setUser('');\n  };\n\n  useEffect(() => {\n    // localStorage를 이용\n    const storageList = JSON.parse(localStorage.getItem('userList'));\n    setUserList(storageList);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: user,\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Github \\uD504\\uB85C\\uD544\\uC744 \\uAC80\\uC0C9\\uD574 \\uBCF4\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      userList: userList,\n      setUserList: setUserList,\n      setUserInfo: setUserInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchBar, \"+2ALqn96QPu8SRGp0y1/rh8VfUg=\");\n\n_c = SearchBar;\nexport default SearchBar;\nconst Input = styled.input`\n  width: 320px;\n  height: 57px;\n  padding: 16px;\n  color: rgb(229, 230, 231);\n  background-color: rgb(36, 39, 43);\n  outline: none;\n  border: 8px solid rgb(105, 105, 105, 0.5);\n  border-radius: 20px;\n`;\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/29SOPT/Jiyeon-Baek/github-profile-finder/src/components/SearchBar.jsx"],"names":["React","useEffect","useState","styled","axios","History","SearchBar","setUserInfo","user","setUser","userList","setUserList","maxHistory","handleChange","e","target","value","handleSubmit","preventDefault","currentUserInfo","status","data","get","error","console","log","includes","tempList","length","slice","localStorage","setItem","JSON","stringify","storageList","parse","getItem","Input","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport History from './History';\r\n\r\nconst SearchBar = ({ setUserInfo }) => {\r\n  const [user, setUser] = useState('');\r\n  const [userList, setUserList] = useState([]);\r\n  const maxHistory = 3;\r\n\r\n  const handleChange = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  // 값을 submit 했을 때, 검색이 되도록.\r\n  // input 태그를 form 태그로 감싸고, onSubmit 이벤트를 사용\r\n\r\n  const handleSubmit = async (e) => {\r\n    // submit 하면 새로고침 되는 것을 방지\r\n    e.preventDefault();\r\n\r\n    setUserInfo((currentUserInfo) => ({\r\n      ...currentUserInfo,\r\n      status: 'pending', // 로딩 중\r\n    }));\r\n\r\n    // user 값을 이용하여 서버에 있는 데이터 받아오기\r\n    // 서버 통신에 시간 소요 -> 비동기 처리 (async, await)\r\n    // axios는 서버 통신을 돕는 툴\r\n    try {\r\n      const { data } = await axios.get(`https://api.github.com/users/${user}`);\r\n      setUserInfo((currentUserInfo) => ({\r\n        ...currentUserInfo,\r\n        data,\r\n        status: 'resolved',\r\n      }));\r\n      setUserInfo(data);\r\n    } catch (error) {\r\n      setUserInfo((currentUserInfo) => ({\r\n        ...currentUserInfo,\r\n        data: null,\r\n        status: 'rejected',\r\n      }));\r\n      console.log(error);\r\n    }\r\n\r\n    // 배열 속에 user가 있는지 확인하고 없으면 추가\r\n    if (!userList.includes(user)) {\r\n      // history에 최대 3개까지만 저장\r\n      let tempList;\r\n      tempList =\r\n        userList.length >= maxHistory\r\n          ? [...userList, user].slice(1, 4)\r\n          : [...userList, user];\r\n\r\n      setUserList(tempList);\r\n      localStorage.setItem('userList', JSON.stringify(tempList));\r\n    }\r\n\r\n    setUser('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // localStorage를 이용\r\n    const storageList = JSON.parse(localStorage.getItem('userList'));\r\n    setUserList(storageList);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          value={user}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          placeholder=\"Github 프로필을 검색해 보세요.\"\r\n        />\r\n      </form>\r\n      <History\r\n        userList={userList}\r\n        setUserList={setUserList}\r\n        setUserInfo={setUserInfo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n\r\nconst Input = styled.input`\r\n  width: 320px;\r\n  height: 57px;\r\n  padding: 16px;\r\n  color: rgb(229, 230, 231);\r\n  background-color: rgb(36, 39, 43);\r\n  outline: none;\r\n  border: 8px solid rgb(105, 105, 105, 0.5);\r\n  border-radius: 20px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}